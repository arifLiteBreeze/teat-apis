version: "3.9"

services:
  app:
    container_name: 'sample-app'
    build:
      context: './.docker/app'
      dockerfile: 'Dockerfile'
    volumes:
      - './:/app'
    depends_on:
        - mysql
    links:
        - mysql
    restart: on-failure
    networks:
      - sample-network

  nginx:
    container_name: 'sample-nginx'
    image: nginx
    links:
      - app
    volumes:
      - './:/app'
      - './.docker/nginx/conf.d:/etc/nginx/conf.d'
    ports:
      - '${APP_PORT:-80}:80'
    depends_on:
      - app
    restart: on-failure
    networks:
      - sample-network

  mysql:
      container_name: 'sample-mysql'
      image: mysql:8.0
      ports:
          - '${FORWARD_DB_PORT:-3306}:3306'
      environment:
          MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
          MYSQL_DATABASE: '${DB_DATABASE}'
          MYSQL_USER: '${DB_USERNAME}'
          MYSQL_PASSWORD: '${DB_PASSWORD}'
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
      volumes:
          - 'samplemysql:/var/lib/mysql'
      healthcheck:
          test: [ "CMD", "mysqladmin", "ping" ]
      restart: on-failure
      networks:
        - sample-network

  phpmyadmin:
    container_name: 'sample-phpmyadmin'
    image: phpmyadmin
    restart: on-failure
    ports:
        -  '${FORWARD_PMA_PORT:-8080}:80'
    environment:
        - PMA_HOST=mysql
    depends_on:
        - mysql
    links:
        - mysql
    networks:
      - sample-network

volumes:
  samplemysql:
        driver: local

networks:
  sample-network:
    driver: bridge
